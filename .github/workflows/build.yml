name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2-beta
        with:
          go-version: '1.13'

      - name: Setup tools
        run: make setup-lint

      - name: Add GOPATH/bin to PATH
        run: echo "::add-path::$( go env GOPATH )/bin"

      - name: Build
        run: make build

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Build Docker
        run: make docker-build

      - name: Upload strimzi-secret-replicator artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: strimzi-secret-replicator

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2

      - name: Download built artifact
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Docker build
        run: |
           mv dist/strimzi-secret-replicator strimzi-secret-replicator
           chmod 755 strimzi-secret-replicator
           make docker-build

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Docker push
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          make docker-tag
          make docker-push

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: strimzi-secret-replicator
          asset_name: strimzi-secret-replicator
          asset_content_type: application/octet-stream
